{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLocaleLowerCase","includes","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6NAyBeA,EAtBE,SAAC,GAAa,EAAZC,OAEX,MAAM,IAAIC,MAAM,WCUTC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVC,KAAK,SACLC,YAAa,gBACbC,SAAYJ,OCCbK,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SACKH,EAAMI,YCmBJC,E,kDArBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IACDM,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAGG,KAAKJ,MAAMC,SACH,mDAEJG,KAAKV,MAAMI,a,GAhBCQ,aCgDZC,G,wDAvCX,aAAe,IAAD,8BACV,gBAOJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAP1C,EAAKX,MAAQ,CACThB,OAAQ,GACRG,YAAa,IAJP,E,gEAaO,IAAD,OAChByB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAErB,OAAQgC,S,+BAGpC,IAAD,OAEAC,EAAiBb,KAAKJ,MAAMhB,OAAOkC,QAAO,SAAAC,GAC5C,OAAOA,EAAMC,KAAKC,oBAAoBC,SAAS,EAAKtB,MAAMb,YAAYkC,wBAG1E,OACI,sBAAKhC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,oBACA,cAAC,EAAD,CAAWD,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAUxB,OAASiC,e,GAjCjBM,IAAMjB,YCGTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.34aecb8f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    if (true) {\r\n        throw new Error('Nooooo');\r\n    }\r\n    return (\r\n        <div>\r\n        {\r\n            robots.map((user, i) => {\r\n                return (\r\n                    <Card\r\n                        key={i}\r\n                        id={robots[i].id}\r\n                        name={robots[i].name}\r\n                        email={robots[i].email}\r\n                    /> \r\n                );\r\n            })\r\n        }\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search'\r\n                placeholder ='Search Robots'\r\n                onChange = {searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>Oooops. Not good!</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ErrorBoundry","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css'\r\n\r\n    \r\n\r\nclass App extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [ ],\r\n            searchfield: '',\r\n        }\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    render () {\r\n\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLocaleLowerCase().includes(this.state.searchfield.toLocaleLowerCase())\r\n        })\r\n\r\n        return (\r\n            <div className='tc'> \r\n            <h1 className='f1'>ROBOTS</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n                <ErrorBoundry>\r\n                <CardList robots ={filteredRobots}/>\r\n                </ErrorBoundry>\r\n            </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}